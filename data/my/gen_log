#!/bin/sh
uses(){
	echo -e 'using\n$0 file_codeswarm.xml [-g|-l]'
}

generatelog(){	
	echo "genereting... "
	state=("\\" "|" "/" "-")
	i=0
	if [ -f "$1" ]; then
		
		type="$2"
		result="$3"
		
		[ -n "$type" ] || type="-g"
		[ -n "$result" ] || result=${1%.*}'.log'
		
		echo -n > $result
		#Выводим только строки в которых есть слово event
		grep -e "event " $1 | \
		#удаляем все символы табуляции и пробелы
		#удаляем все <event и />
		sed -e "s/^[ \\t]*//;s/^<event //g;s|/>$||g" | \
		while read line
		do
			date=""
			#валидируем строку, появляются 4 переменные
			eval $line;
			#проверяем не пустали переменная date, если нет производим вывод
            [ "$file" == "." ] && date=""
			if [ -n "$date" ]; then
				author=`echo $author | sed -e 's/&lt;/</g' -e 's/&gt;/>/g'`
				str="${date%000}|$author|$action|$filename";
				if [ "$type" == "-l" ]; then
					author=`echo $author | sed -e 's/<//g' -e 's/>//g'`
					str="${date%000}|$author|$filename|$action|${#filename}" 
				if
				echo $str >> $result
			fi
			#отображение процесса генерации.
			echo -ne "\r \r${state[$i]}" >&2
			(( i += 1 ))
			[[ $i -eq 5 ]] && i=0
		done 
		echo -ne "\rcompleted!"
	else
		echo -e "file log code_swarm not exsits!\n$1"
	fi
}
echo "-------"

type='-g'
result=${1%.*}'.log'

for arg
do
	case "$arg" in		
		-o*)
			result=`echo $arg | sed -e 's/-o//' -e 's/=//'`
		;;
		-[gl])
			type=$arg
		;;
	esac
done;

[ -n "$1" ] && generatelog $1 $type $result || uses