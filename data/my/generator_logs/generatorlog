#!/bin/sh

generate() {
	if test -t 1; then
		exec >$logfile
	fi

	echo -e "<?xml version=\"1.0\"?>\n<file_events>"
	echo "generating ..." >&2
	allline=`sed -n $= $gitdiff`

	awk -v typegen=$1 -v alll=$allline -v typeuser=$2 '
		BEGIN {
			split(". .. ... .... ..... - -- --- ---- ------ = == === ==== =====", st, " ")            
			ist=0
			pres=100/alll;
			_ord_init()

			typehash=0
			if( typegen == "ch_code") {
				typehash=1
				cmd="echo \"hash = " typegen "\" >&2"
			}
			else if( typegen == "crypt" ) {
				typehash=2
				cmd="echo \"hash = " typegen "\" >&2"
			}
			
			if (typehash == 0)
				cmd="echo \"hash = md5\" >&2"
			
			system(cmd)
			close(cmd)
			
			tu=0
			if( typeuser == "file" )
				tu=1
		}

		function _ord_init(low, high, i, t)
		{
			low = sprintf("%c", 7)
			if (low == "\a") {
				low = 0
				high = 127
			} else if (sprintf("%c", 128 + 7) == "\a") {
				low = 128
				high = 255
			} else {
				low = 0
				high = 255
			}
            
			for (i = low; i <= high; i++) {
				t = sprintf("%c", i)
				_ord_[t] = i
			}
		}

		function ord(str, c) {        
			c = substr(str, 1, 1);
			return _ord_[c];
		}

		/^[0-9]/ { 
			u=$0
			d=$0
			sub(/:.*/, "", d);
			sub(/[^:]*:/, "", u);
			next;
		}
		/^&/ {
			f=u
			if ( tu == 1 ) {
				sub(/&/, "");
				f=$0
				substr($0, 2, length($0) - 1);
			}
			next;
		}
        { a="A"; }
		/^-/ { a="D"; }
		/^[\+-]/ {
			sub(/[\+-]/, "")
			if (length($0) > 0){
				str=""
				if( typehash == 1) {
					for(i=0; i<length($0); i++){
						str = str "" ord(substr($0, i, 1))
					}
					gsub(/32|16/, "/sd", str);
					if(length(str) > 2)
						str = substr(str, 0, length(str)-1) "." substr(str, length(str)-1, 2);
				}
				else {
					cmd="echo \"" $0 "\" | md5sum | cut -f1 -d \" \" | sed -e \"s@[32|16]@/sd@g;\" -e \"s/\\(..\\)\$/.\\1/\"" 
					if ( typehash == 2 )
						cmd="C:/Perl/bin/perl -e \"print crypt($ARGV[0], $ARGV[1])\" \"" $0 "\" \"1/5l58j/jk\"" 
					cmd | getline str;
					close(cmd);
				}

				if (str != "")
					print "<event date=\""d"\" author=\""f"\" filename=\""str"\" action=\""a"\"  comment=\"\"/>"
			}
			cmd = "echo -ne \"\\r\\t\\t\\t\\t\\t\\r" FNR "/" alll "(" FNR * pres "%) " st[ist++] "\" >&2"
			#eсли запускать под debian, то
			#cmd = "bash -c \"echo -ne \\\"\\\\r\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r" FNR "/" alll "(" FNR * pres "%) " st[ist++] "\\\" >&2\""
			system(cmd)
			close(cmd)
			if (ist > 16) ist=0
		}
	' $gitdiff

	echo -e "\n\r\t\t\t\t\t\r\1 completed \2" >&2
	echo "</file_events>"
	rm $gitdiff
}

prepare_git() {
	git log -U0 --diff-filter=AMD --reverse --pretty="%at000:%cn" $1 | \
		grep -v "^\(-\{3\}\|+\{3\}\) " | \
		grep -v "^[+-][ \\t]*$" | \
		grep -v "^[+-]$" | \
		grep -v "^[ \\t]*$" | \
		sed -e "s/diff .* b\//\&/g" \
			-e "s/^+[ \\t]\+/+/g" \
			-e "s/^-[ \\t]\+/-/g" \
			-e "s/[ \\t]\+$//g" \
			-e "s/^$//g" \
			-e 's/\\/\\\\/g' \
			-e "s/[\"\`<>$]//g" > $gitdiff
}


usege="$0 [options]\n
OPTIONS:\n
\t--help — этот текст.\n
\n
\t-H[md5|crypt|ch_code]\n
\t--hash[=md5|crypt|ch_code] — тип функции для генерации хеша строки. По-умолчанию md5.\n
\n
\t-<n> — лимит коммитов. Нужен для git log. Более подробная информация git log --help.\n
\n
\t-F[ile]\n
\t-U[ser]\n
\t--author[=user|file] — кто выступаев в роли автора. А имено постоение статистики в разрезах пользователь-колво строк или файл-колво строк.\n"
for arg
do
	case "$arg" in		
		--hash*)
			typehash=`echo $arg | sed -e 's/--hash//g' -e 's/=//g'`
			[ -n "$typehash" ] || typehash=md5
		;;
		-H*)
			typehash=`echo $arg | sed -e 's/-H//g'`
			[ -n "$typehash" ] || typehash=md5
		;;
		-[0-9])
			countcommit=$arg
		;;
		-F|-File)
			typeauthor=file
		;;
		--author*)
			typeauthor=`echo $arg | sed -e 's/--author//g' -e 's/=//g'`
		;;
		*) 
			echo -e $usege
			exit
		;;
	esac
done;

echo -e "countcommit = $countcommit\nauthor = $typeauthor"

fileaction="$(date +%j%H%M%s)"
gitdiff=$fileaction".temp"
logfile=$fileaction"action.xml"

prepare_git $countcommit
generate $typehash $typeauthor
